buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

group = 'net.lovetropics'
archivesBaseName = 'LoveTropics'

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'
version = "${mod_version}-${release_type}+${buildnumber}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20200515-1.15.1'
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
        	taskName 'lovetropics_client'
        	
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                lovetropics {
                    source sourceSets.main
                }
            }
        }

        server {
        	taskName 'lovetropics_server'
        
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                lovetropics {
                    source sourceSets.main
                }
            }
        }
        
        data {
        	taskName 'lovetropics_data'
        
            workingDirectory project.file('run')
            
            environment 'target', 'fmluserdevdata'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                lovetropics {
                    source sourceSets.main
                }
            }
            
			args '--mod', 'lovetropics', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
				 '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"' 
			
        }
    }
}

sourceSets.main.resources {
	srcDir 'src/generated/resources'
}

repositories {
	mavenLocal()
}

configurations {
	shade
}

repositories {
	maven { // Registrate
		url "http://maven.tterrag.com/"
	}
	mavenLocal()
    flatDir {
       dirs 'libs/'
   }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    
	def registrate = "com.tterrag.registrate:Registrate:MC${minecraft_version}-${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate
    def tropi = 'net.tropicraft:Tropicraft:8.1.0-alpha+12'
    runtimeOnly fg.deobf(tropi)
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'net.tropicraft.lovetropics.repack.registrate'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "lovetropicsmod",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
